\nfrom __future__ import annotations\nimport json\nimport os\nimport time\nfrom typing import Any, Dict, List\n\nclass Memory:\n    """Append-only JSONL memory."""\n\n    def __init__(self, path: str = "memory.jsonl") -> None:\n        self.path = path\n        if not os.path.exists(self.path):\n            open(self.path, "a", encoding="utf-8").close()\n\n    def store(self, **record: Any) -> None:\n        rec = {"ts": time.time(), **record}\n        with open(self.path, "a", encoding="utf-8") as f:\n            f.write(json.dumps(rec, ensure_ascii=False) + "\n")\n\n    def all(self) -> List[Dict[str, Any]]:\n        out: List[Dict[str, Any]] = []\n        with open(self.path, "r", encoding="utf-8") as f:\n            for line in f:\n                line = line.strip()\n                if not line:\n                    continue\n                out.append(json.loads(line))\n        return out\n
